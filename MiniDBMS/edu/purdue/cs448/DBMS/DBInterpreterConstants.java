/* Generated By:JavaCC: Do not edit this line. DBInterpreterConstants.java */
package edu.purdue.cs448.DBMS;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DBInterpreterConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int KWORD_SELECT = 7;
  /** RegularExpression Id. */
  int KWORD_INSERT = 8;
  /** RegularExpression Id. */
  int KWORD_UPDATE = 9;
  /** RegularExpression Id. */
  int KWORD_CREATE = 10;
  /** RegularExpression Id. */
  int KWORD_DELETE = 11;
  /** RegularExpression Id. */
  int KWORD_DROP = 12;
  /** RegularExpression Id. */
  int KWORD_FROM = 13;
  /** RegularExpression Id. */
  int KWORD_WHERE = 14;
  /** RegularExpression Id. */
  int KWORD_INTO = 15;
  /** RegularExpression Id. */
  int KWORD_TABLE = 16;
  /** RegularExpression Id. */
  int KWORD_VALUES = 17;
  /** RegularExpression Id. */
  int KWORD_SET = 18;
  /** RegularExpression Id. */
  int KWORD_AND = 19;
  /** RegularExpression Id. */
  int KWORD_OR = 20;
  /** RegularExpression Id. */
  int KWORD_CHECK = 21;
  /** RegularExpression Id. */
  int KWORD_PRIMARY = 22;
  /** RegularExpression Id. */
  int KWORD_KEY = 23;
  /** RegularExpression Id. */
  int KWORD_REF = 24;
  /** RegularExpression Id. */
  int KWORD_FOREIGN = 25;
  /** RegularExpression Id. */
  int KWORD_HELP = 26;
  /** RegularExpression Id. */
  int KWORD_DESCRIBE = 27;
  /** RegularExpression Id. */
  int KWORD_CHAR = 28;
  /** RegularExpression Id. */
  int KWORD_INT = 29;
  /** RegularExpression Id. */
  int KWORD_DECIMAL = 30;
  /** RegularExpression Id. */
  int KWORD_QUIT = 31;
  /** RegularExpression Id. */
  int KWORD_TABLES = 32;
  /** RegularExpression Id. */
  int KWORD_USER = 33;
  /** RegularExpression Id. */
  int KWORD_SUBSCHEMA = 34;
  /** RegularExpression Id. */
  int SYM_LPARENTHESE = 35;
  /** RegularExpression Id. */
  int SYM_RPARENTHESE = 36;
  /** RegularExpression Id. */
  int SYM_SEMICOLON = 37;
  /** RegularExpression Id. */
  int SYM_EQUAL = 38;
  /** RegularExpression Id. */
  int SYM_LESS = 39;
  /** RegularExpression Id. */
  int SYM_LESSEQUAL = 40;
  /** RegularExpression Id. */
  int SYM_NOTEQUAL = 41;
  /** RegularExpression Id. */
  int SYM_GREATER = 42;
  /** RegularExpression Id. */
  int SYM_GREATEREQUAL = 43;
  /** RegularExpression Id. */
  int SYM_PLUS = 44;
  /** RegularExpression Id. */
  int SYM_MINUS = 45;
  /** RegularExpression Id. */
  int SYM_ASTERISK = 46;
  /** RegularExpression Id. */
  int SYM_SLASH = 47;
  /** RegularExpression Id. */
  int SYM_PERCENT = 48;
  /** RegularExpression Id. */
  int SYM_COMMA = 49;
  /** RegularExpression Id. */
  int IDENTIFIER = 50;
  /** RegularExpression Id. */
  int INT_LITERAL = 51;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 52;
  /** RegularExpression Id. */
  int EXPONENT = 53;
  /** RegularExpression Id. */
  int STRING_DQUOTE_LITERAL = 54;
  /** RegularExpression Id. */
  int STRING_LITERAL = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "\"SELECT\"",
    "\"INSERT\"",
    "\"UPDATE\"",
    "\"CREATE\"",
    "\"DELETE\"",
    "\"DROP\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"INTO\"",
    "\"TABLE\"",
    "\"VALUES\"",
    "\"SET\"",
    "\"AND\"",
    "\"OR\"",
    "\"CHECK\"",
    "\"PRIMARY\"",
    "\"KEY\"",
    "\"REFERENCES\"",
    "\"FOREIGN\"",
    "\"HELP\"",
    "\"DESCRIBE\"",
    "\"CHAR\"",
    "\"INT\"",
    "\"DECIMAL\"",
    "\"QUIT\"",
    "\"TABLES\"",
    "\"USER\"",
    "\"SUBSCHEMA\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\",\"",
    "<IDENTIFIER>",
    "<INT_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_DQUOTE_LITERAL>",
    "<STRING_LITERAL>",
    "\"USER-A\"",
    "\"USER-B\"",
  };

}
